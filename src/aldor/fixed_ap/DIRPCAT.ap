
(|Sequence| (|Import| NIL |AxiomLib|) (|Import| NIL |Boolean|)
            (|ForeignImport| (|Declare| |dummyDefault| |Exit|) |Lisp|)
            (|Define|
             (|Declare| |DirectProductCategory|
              (|Apply| ->
               (|Comma| (|Declare| |#1| |NonNegativeInteger|)
                (|Declare| |#2| |Type|))
               |Category|))
             (|Lambda|
              (|Comma| (|Declare| |#1| |NonNegativeInteger|)
               (|Declare| |#2| |Type|))
              |Category|
              (|Label| |DirectProductCategory|
               (|With| NIL
                (|Sequence| (|Apply| |IndexedAggregate| |Integer| |#2|)
                            (|Apply| |CoercibleTo| (|Apply| |Vector| |#2|))
                            (|Apply| |AbelianProductCategory| |#2|)
                            |finiteAggregate|
                            (|Declare| |directProduct|
                             (|Apply| -> (|Comma| (|Apply| |Vector| |#2|)) %))
                            (|If| (|Test| (|Has| |#2| |SetCategory|))
                             (|Apply| |FullyRetractableTo| |#2|) NIL)
                            (|If| (|Test| (|Has| |#2| |Ring|))
                             (|Sequence| (|Apply| |DifferentialExtension| |#2|)
                                         (|Apply| |FullyLinearlyExplicitOver|
                                          |#2|))
                             NIL)
                            (|If| (|Test| (|Has| |#2| |AbelianMonoid|))
                             (|If| (|Test| (|Has| |#2| |Monoid|))
                              (|Declare| |unitVector|
                               (|Apply| -> (|Comma| |PositiveInteger|) %))
                              NIL)
                             NIL)
                            (|If| (|Test| (|Has| |#2| |SemiRng|))
                             (|Sequence| |SemiRng|
                                         (|Apply| |BiModule| |#2| |#2|)
                                         (|If|
                                          (|Test| (|Has| |#2| |AbelianMonoid|))
                                          (|Declare| |dot|
                                           (|Apply| -> (|Comma| % %) |#2|))
                                          NIL))
                             NIL)
                            (|If| (|Test| (|Has| |#2| |Monoid|)) |Monoid| NIL)
                            (|If| (|Test| (|Has| |#2| |SemiGroup|))
                             (|Sequence| |SemiGroup|
                                         (|Declare| *
                                          (|Apply| -> (|Comma| |#2| %) %))
                                         (|Declare| *
                                          (|Apply| -> (|Comma| % |#2|) %)))
                             NIL)
                            (|If| (|Test| (|Has| |#2| |Finite|)) |Finite| NIL)
                            (|If| (|Test| (|Has| |#2| |CommutativeRing|))
                             (|Sequence| (|Apply| |Algebra| |#2|)
                                         |CommutativeRing|)
                             NIL)
                            (|If| (|Test| (|Has| |#2| |unitsKnown|))
                             |unitsKnown| NIL)
                            (|If| (|Test| (|Has| |#2| |OrderedSet|))
                             |OrderedSet| NIL)
                            (|If|
                             (|Test| (|Has| |#2| |OrderedAbelianMonoidSup|))
                             |OrderedAbelianMonoidSup| NIL)
                            (|If| (|Test| (|Has| |#2| |Field|))
                             (|Apply| |VectorSpace| |#2|) NIL)
                            (|Default|
                             (|Sequence|
                              (|Define|
                               (|Declare| / (|Apply| -> (|Comma| % |#2|) %))
                               (|Lambda|
                                (|Comma| (|Declare| |t#1| %)
                                 (|Declare| |t#2| |#2|))
                                % (|Label| / |dummyDefault|)))
                              (|Define|
                               (|Declare| |characteristic|
                                (|Apply| -> (|Comma|) |NonNegativeInteger|))
                               (|Lambda| (|Comma|) |NonNegativeInteger|
                                         (|Label| |characteristic|
                                          |dummyDefault|)))
                              (|Define|
                               (|Declare| |coerce|
                                (|Apply| -> (|Comma| |Integer|) %))
                               (|Lambda| (|Comma| (|Declare| |t#1| |Integer|))
                                         % (|Label| |coerce| |dummyDefault|)))
                              (|Define|
                               (|Declare| |differentiate|
                                (|Apply| ->
                                 (|Comma| % (|Apply| -> (|Comma| |#2|) |#2|))
                                 %))
                               (|Lambda|
                                (|Comma| (|Declare| |t#1| %)
                                 (|Declare| |t#2|
                                  (|Apply| -> (|Comma| |#2|) |#2|)))
                                % (|Label| |differentiate| |dummyDefault|)))
                              (|Define|
                               (|Declare| |dimension|
                                (|Apply| -> (|Comma|) |CardinalNumber|))
                               (|Lambda| (|Comma|) |CardinalNumber|
                                         (|Label| |dimension| |dummyDefault|)))
                              (|Define|
                               (|Declare| |index|
                                (|Apply| -> (|Comma| |PositiveInteger|) %))
                               (|Lambda|
                                (|Comma| (|Declare| |t#1| |PositiveInteger|)) %
                                (|Label| |index| |dummyDefault|)))
                              (|Define|
                               (|Declare| |lookup|
                                (|Apply| -> (|Comma| %) |PositiveInteger|))
                               (|Lambda| (|Comma| (|Declare| |t#1| %))
                                         |PositiveInteger|
                                         (|Label| |lookup| |dummyDefault|)))
                              (|Define|
                               (|Declare| |size|
                                (|Apply| -> (|Comma|) |NonNegativeInteger|))
                               (|Lambda| (|Comma|) |NonNegativeInteger|
                                         (|Label| |size|
                                          |dummyDefault|)))))))))))