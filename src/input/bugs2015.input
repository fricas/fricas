)set break resume
)expose UnittestCount UnittestAux Unittest

testsuite "bugs2015"

testcase "bug in lifting"

r := (4*x^3+2*y^2+1)*(12*x^5-x^3*y+12)*(y^2+3);
testTrue("(res := factor(r); true)")
fl := factors(res);
testEquals("#fl", "3")
testEquals("fl(1).factor", "x^3*y - 12*x^5 - 12")
testEquals("unit(res)*fl(1).factor*fl(2).factor*fl(3).factor", "r")

testcase "bug in PFBRU"

P := UnivariatePolynomial('x, Integer)
R := UnivariatePolynomial('y, P)
r: R := (4*x^3+2*y^2+1)*(12*x^5-x^3*y+12)*(y^2+3);
testTrue("(res := factorPolynomial r; true)")
fl := factors(res);
testEquals("#fl", "3")
testEquals("fl(1).factor", "x^3*y - 12*x^5 - 12")
testEquals("unit(res)*fl(1).factor*fl(2).factor*fl(3).factor", "r")

testcase "recip in SQMATRIX"

m := matrix([[1, 3], [0, 1]])::Matrix(Integer)
testEquals("recip(m)", "matrix([[1, -3], [0, 1]])")

testcase "messed Fresnel integrals"

testEquals("fresnelS(x)::Expression(Complex(Integer))", "fresnelS(x)")
)set output algebra on
statistics()
